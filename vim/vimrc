" Welcome in Vim!
set nocompatible

" Encoding
set encoding=utf8
set fileencoding=utf8

" Vundle
filetype off
set runtimepath+=~/.vim/bundle/vundle/
call vundle#rc()
source ~/.vim/bundles.vim
filetype plugin indent on

" Indentation
set expandtab
set softtabstop=4
set shiftwidth=4
set smarttab
set tabstop=4

" Searching
set incsearch
set smartcase
set ignorecase
set hlsearch
set nowrapscan

" Viewing
set nowrap
set nonumber

" Wild menu
set wildmenu

" No more annoyances!
set nomore

" Status line
"" show the status line with more than one window
set laststatus=1

" Don't annoy me with swap files
set directory=$HOME/.vim/swapfiles

" Miscellaneous
set hidden
set shortmess=aI
set visualbell

" The command window
set cmdheight=1

" Don't highlight anything
set colorcolumn=

" detect file types and run appriopriate scripts
filetype on
filetype plugin on

" Syntax highlight
syntax on
colorscheme smyck

" Mappings
let mapleader = ","

"" make j and k use logical lines
nnoremap j gj
nnoremap k gk

"" toggling background color
function! ToggleBackground()
    if &background == "light"
        set background=dark
    else
        set background=light
    endif
endfunction

nnoremap <silent> <leader>cb :call ToggleBackground()<CR>

"" replacing
nnoremap <leader>s :%s/\<<C-r><C-w>\>//gc<Left><Left><Left>

"" split windows in a smart way
function! New()
    if 2 * winwidth(0) > 5 * winheight(0)
        execute 'vertical new +setfiletype\ ' . &filetype
    else
        execute 'new +setfiletype\ ' . &filetype
    endif
endfunction

nnoremap <C-n> :call New()<CR>

"" <leader>/ toggles search highlight
nnoremap <silent> <leader>/ :set hlsearch!<CR>

" Ag
nnoremap <leader>a :Ag!<SPACE>
nnoremap <leader>w :Ag! -w <C-R><C-W><CR>

" UltiSnips

"" cannot use snippets because it's reserved for SnipMate snippets
let g:UltiSnipsSnippetDirectories = ['snips']

"" we need to use CTRL-j in order to avoid conflicts with YCM
let g:UltiSnipsExpandTrigger = '<c-j>'

" Syntastic
let g:syntastic_python_checkers = ['pylint', 'pep8']
let g:syntastic_auto_loc_list=0
let g:syntastic_mode_map = {
\   'mode': 'passive',
\   'active_filetypes': [],
\   'passive_filetypes': []
\}
let g:syntastic_python_pep8_args = '--max-line-length=80'

nnoremap <leader>l :SyntasticCheck<CR>

" Shell and Thunar
if has('gui_running')
    nnoremap <leader>x :silent :!terminal >& /dev/null &<CR>
else
    nnoremap <leader>x :shell<CR>
endif

nnoremap <leader>t :silent :!thunar &> /dev/null &<CR>
